#!/bin/bash

echo "üê≥ BigData Lab04 - Docker Setup"
echo "================================"

# Ki·ªÉm tra Docker c√≥ c√†i ƒë·∫∑t kh√¥ng
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t. H√£y c√†i ƒë·∫∑t Docker tr∆∞·ªõc."
    echo "üí° H∆∞·ªõng d·∫´n c√†i ƒë·∫∑t: https://docs.docker.com/get-docker/"
    exit 1
fi

echo "‚úÖ Docker version: $(docker --version)"
echo "‚úÖ Docker Compose version: $(docker compose version)"

echo ""
echo "üöÄ Kh·ªüi ƒë·ªông infrastructure (Kafka + MongoDB)..."

# Kh·ªüi ƒë·ªông Zookeeper, Kafka, Kafka UI v√† MongoDB
docker compose up -d zookeeper kafka kafka-ui mongodb

echo ""
echo "‚è≥ ƒê·ª£i services kh·ªüi ƒë·ªông ho√†n t·∫•t..."
sleep 30

echo ""
echo "üóÑÔ∏è Ki·ªÉm tra MongoDB..."
docker compose exec mongodb mongosh --eval "db.adminCommand('ping')" --quiet

echo ""
echo "üìã T·∫°o topic btc-price..."
docker compose exec kafka kafka-topics --create --topic btc-price --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1 2>/dev/null || echo "Topic ƒë√£ t·ªìn t·∫°i"

echo ""
echo "üîç Ki·ªÉm tra topics:"
docker compose exec kafka kafka-topics --list --bootstrap-server localhost:9092

echo ""
echo "‚úÖ Infrastructure ƒë√£ s·∫µn s√†ng!"
echo ""
echo "üìñ H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:"
echo "1. Kafka UI: http://localhost:8080"
echo "2. Kafka Server: localhost:9092" 
echo "3. MongoDB: localhost:27017"
echo "4. Ch·∫°y Python app: ./run-python-app.sh"
echo ""
echo "üîß C√°c l·ªánh h·ªØu √≠ch:"
echo "   - Xem messages: docker exec kafka kafka-console-consumer --bootstrap-server localhost:9092 --topic btc-price --from-beginning"
echo "   - MongoDB shell: docker exec -it mongodb mongosh bigdata_lab04"
echo "   - Xem logs Kafka: docker compose logs -f kafka"
echo "   - Xem logs MongoDB: docker compose logs -f mongodb"
echo "   - D·ª´ng services: docker compose down"
echo "   - Restart: docker compose restart"
